{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/form/form.component.ts","webpack:///src/app/component/form/form.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/login/login.component.ts","webpack:///src/app/component/login/login.component.html","webpack:///src/app/component/logout/logout.component.ts","webpack:///src/app/component/logout/logout.component.html","webpack:///src/app/component/wallet/wallet.component.ts","webpack:///src/app/component/wallet/wallet.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/wallet-add/wallet-add.component.ts","webpack:///src/app/components/wallet-add/wallet-add.component.html","webpack:///src/app/components/wallet-remove/wallet-remove.component.ts","webpack:///src/app/components/wallet-remove/wallet-remove.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/api-service.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/token.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","auth","router","displayNavbar","on","preventDefault","window","outerWidth","toggleClass","uid","uuid","linkForm","replace","c","r","Math","random","v","toString","cerrarS","alert","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","register","enabled","production","declarations","providers","bootstrap","FormComponent","apiService","emailPattern","mode","data","name","lastName","country","city","adress","telephone","email","formErrors","Name","LastName","Telephone","Adress","City","Country","Email","options","DataForm","required","minLength","pattern","filteredOptions","get","valueChanges","pipe","value","_filter","slice","subscribirAEntrada","codePhone","filterValue","toLowerCase","filter","option","indexOf","entrada","fn","obs","subscribe","next","control","valor","undefined","length","validacion","retunData","event","key","keyCode","which","tecla","String","fromCharCode","letras","especiales","tecla_especial","i","validarRequerido","valid","dataIsNotNull","console","log","sendMail","res","navigate","err","HomeComponent","LoginComponent","authService","user","password","inicio","localStorage","setItem","token","login","LogoutComponent","WalletComponent","dataService","route","current_date","Date","idPage","snapshot","params","findById","dataUser","x","remove","add","NavbarComponent","idNavigation","getItem","RegisterComponent","registro","WalletAddComponent","income","ValueAdd","total","balance","isTrue","confirm","upgradeData","back","WalletRemoveComponent","AuthGuard","loggedIn","providedIn","ApiServiceService","http","URL","Data","post","AuthService","url","removeItem","DataService","Id","nuevosDatos1","JSON","stringify","headers","put","TokenService","tokenR","clone","setHeaders","Authorization","getToken","handle","environment","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from \"./guards/auth.guard\"\nimport { FormComponent } from './component/form/form.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { WalletComponent } from './component/wallet/wallet.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { WalletAddComponent } from './components/wallet-add/wallet-add.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { WalletRemoveComponent } from './components/wallet-remove/wallet-remove.component';\n\n\nconst routes: Routes = [{ path: '', pathMatch: 'full', redirectTo: '/home' },\n{ path: 'home', component: HomeComponent },\n{ path: 'form2data/:id', component: FormComponent },\n{ path: \"wallet/:id\", component: WalletComponent, canActivate: [AuthGuard] },\n{ path: \"login\", component: LoginComponent },\n{ path: \"wallet/:id/add\", component: WalletAddComponent },\n{ path: \"register\", component: RegisterComponent },\n{ path: \"wallet/:id/remove\", component: WalletRemoveComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as $ from 'jquery';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public uid: any;\n  public linkForm: any;\n  displayNavbar: string;\n  constructor(public auth: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.displayNavbar = '1';\n\n    $('#toggle-btn').on('click', function (e) {\n      e.preventDefault();\n      if ($(window).outerWidth() > 1000) {\n        $('#toggle-btn').toggleClass('mobile-version-navbar-show');\n      } else {\n        $('nav.side-navbar').toggleClass('show-sm');\n        $('#toggle-btn').toggleClass('mobile-version-navbar-show');\n      }\n    });\n\n    this.uid = this.uuid();\n    this.linkForm = \"/form2data/\" + this.uid;\n  }\n\n  toggleNavbar() {\n    if (this.displayNavbar == '0') {\n      this.displayNavbar = '1';\n      //  alert(this.displayNavbar);\n    } if (this.displayNavbar == '1') {\n      //    alert(\"1 - Changing to 0\");\n      this.displayNavbar = '0';\n    } else {\n      this.displayNavbar = '1';\n    }\n  }\n\n  uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  cerrar() {\n    this.auth.cerrarS();\n    alert('Exit!...');\n  }\n}\n","<app-navbar  ></app-navbar>\n<div class=\"m-5\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './component/form/form.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HomeComponent } from './component/home/home.component';\n\n//Services\nimport { TokenService } from \"./services/token.service\"\nimport { AuthGuard } from \"./guards/auth.guard\"\n//pwa\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { WalletComponent } from './component/wallet/wallet.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { LogoutComponent } from './component/logout/logout.component';\nimport { WalletAddComponent } from './components/wallet-add/wallet-add.component';\nimport { WalletRemoveComponent } from './components/wallet-remove/wallet-remove.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n    HomeComponent,\n    WalletComponent,\n    LoginComponent,\n    LogoutComponent,\n    WalletAddComponent,\n    WalletRemoveComponent,\n    RegisterComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatIconModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatToolbarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Country } from '../../models/country';\nimport countries from '../../lib/countries.json';\nimport { ApiServiceService } from '../../services/api-service.service';\nimport { Router } from '@angular/router';\n\n/**\n * @title Input with error messages\n */\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  private emailPattern: any = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  public validacion: boolean;\n\n  public mode: string = \"form\"\n  public DataForm: FormGroup;\n  public data: any = {\n    name: \"|\",\n    lastName: \"|\",\n    country: \"|\",\n    city: \"|\",\n    adress: \"|\",\n    telephone: \"|\",\n    email: \"|\",\n  }\n  public formErrors = {\n    Name: \"\",\n    LastName: \"\",\n    Telephone: \"\",\n    Adress: \"\",\n    City: \"\",\n    Country: \"\",\n    Email: \"\",\n  };\n  public codePhone: any;\n  options: Country[] = countries;\n  filteredOptions: Observable<Country[]>;\n\n  constructor(private apiService: ApiServiceService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.DataForm = new FormGroup({\n      Name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      LastName: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      Telephone: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      Adress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      City: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      Country: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      Email: new FormControl('', [Validators.required, Validators.minLength(5), Validators.pattern(this.emailPattern)]),\n    });\n    this.filteredOptions = this.DataForm.get(\"Country\").valueChanges\n      .pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this._filter(name) : this.options.slice()),\n      );\n    this.subscribirAEntrada(\"Country\", value => {\n      this.codePhone = value.code;\n    })\n  }\n\n  displayFn(country: Country): string {\n    return country && country.name ? country.name : '';\n  }\n\n  private _filter(name: string): Country[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  subscribirAEntrada(entrada: string, fn: any) {\n    const obs = this.DataForm.get(entrada);\n    if (obs != null) {\n      obs.valueChanges.subscribe({\n        next: fn,\n      });\n    }\n  }\n\n  validarRequerido(control: string) {\n    const valor = this.DataForm.get(control).value;\n    switch (control) {\n      case \"Name\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.Name = \"error\";\n          this.validacion = true;\n        } else {\n          this.formErrors.Name = \"\"\n        }\n        break;\n      case \"LastName\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.LastName = \"error\";\n          this.validacion = true;\n        } else {\n          this.formErrors.LastName = \"\"\n        }\n        break;\n      case \"Telephone\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.Telephone = \"error\"\n          this.validacion = true;\n        } else {\n          this.formErrors.Telephone = \"\"\n        }\n        break;\n      case \"City\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.City = \"error\"\n          this.validacion = true;\n        } else {\n          this.formErrors.City = \"\"\n        }\n        break;\n      case \"Adress\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.Adress = \"error\"\n          this.validacion = true;\n        } else {\n          this.formErrors.Adress = \"\"\n        }\n        break;\n      case \"Country\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.Country = \"error\"\n          this.validacion = true;\n        } else {\n          this.formErrors.Country = \"\"\n        }\n        break;\n      case \"Email\":\n        if (valor == null || valor == undefined || valor == \"\" || valor.length < 1) {\n          this.formErrors.Email = \"error\"\n          this.validacion = true;\n        } else {\n          this.formErrors.Email = \"\";\n        }\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  retunData(control: string) {\n    return this.DataForm.get(control).value;\n  }\n\n  dataIsNotNull(name: string, lastName: string, country: string, city: string, adress: string, telephone: string, email: string) {\n    if ((this.retunData(name) &&\n      this.retunData(lastName) &&\n      this.retunData(country) &&\n      this.retunData(city) &&\n      this.retunData(adress) &&\n      this.retunData(telephone) &&\n      this.retunData(email)) != null) {\n      this.data.name = this.retunData(name);\n      this.data.lastName = this.retunData(lastName);\n      this.data.country = this.retunData(country).name;\n      this.data.city = this.retunData(city);\n      this.data.adress = this.retunData(adress);\n      this.data.telephone = \"+\" + this.codePhone + this.retunData(telephone);\n      this.data.email = this.retunData(email);\n    }\n  }\n\n  onKeypressEvent(event: any) {\n    var key = event.keyCode || event.which,\n      tecla = String.fromCharCode(key).toLowerCase(),\n      letras = \" áéíóúabcdefghijklmnñopqrstuvwxyz.-\",\n      especiales = [8, 37, 39, 46],\n      tecla_especial = false;\n    for (var i in especiales) {\n      if (key == especiales[i]) {\n        tecla_especial = true;\n        break;\n      }\n    }\n    if (letras.indexOf(tecla) == -1 && !tecla_especial) {\n      return false;\n    }\n  }\n\n  submit() {\n\n    this.validarRequerido(\"Name\");\n    this.validarRequerido(\"LastName\");\n    this.validarRequerido(\"Email\");\n    this.validarRequerido(\"Country\");\n    this.validarRequerido(\"City\");\n    this.validarRequerido(\"Adress\");\n    this.validarRequerido(\"Telephone\");\n\n    if (this.DataForm.valid) {\n      this.validacion = true;\n      this.dataIsNotNull(\"Name\", \"LastName\", \"Country\", \"City\", \"Adress\", \"Telephone\", \"Email\",)\n      this.mode = \"preview\"\n    } else {\n      this.validacion = false;\n    }\n\n    console.log(this.validacion)\n\n  }\n\n  onSubmit() {\n    this.apiService.sendMail(this.data).subscribe(\n      res => {\n        console.log(res)\n        this.router.navigate(['/home']);\n      },\n      err => console.log(err)\n    )\n  }\n\n  onBack() {\n    this.mode = \"form\"\n  }\n\n\n\n}\n","<div class=\"container\">\n    <form name=\"f\" [formGroup]=\"DataForm\" class=\"form\">\n        <div *ngIf=\"mode == 'form'\">\n            <mat-card class=\"example-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"example-header-image\"></div>\n                    <mat-card-title>Contact data</mat-card-title>\n                    <mat-card-subtitle>Form</mat-card-subtitle>\n                </mat-card-header>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Name</mat-label>\n                    <input type=\"text\" matInput placeholder=\"Juan David\" formControlName=\"Name\" (keypress)=\"onKeypressEvent($event)\" >\n                    <mat-icon matSuffix>rowing</mat-icon>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.Name\" class=\"err-msg\">\n                    The name is required\n                </div>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Last Name</mat-label>\n                    <input type=\"text\" matInput placeholder=\"Mahecha Cruz\" formControlName=\"LastName\" (keypress)=\"onKeypressEvent($event)\">\n                    <mat-icon matSuffix>rowing</mat-icon>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.LastName\" class=\"err-msg\">\n                    The last name is required\n                </div>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Country</mat-label>\n                    <input type=\"text\" placeholder=\"United States\" matInput formControlName=\"Country\"\n                        [matAutocomplete]=\"auto\">\n                    <mat-icon matSuffix>location_searching</mat-icon>\n                    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                            {{option.name}}\n                        </mat-option>\n\n                    </mat-autocomplete>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.Country\" class=\"err-msg\">\n                    The country is required\n                </div>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>City</mat-label>\n                    <input type=\"text\" matInput placeholder=\"Newark, OH\" formControlName=\"Adress\">\n                    <mat-icon matSuffix>directions</mat-icon>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.Adress\" class=\"err-msg\">\n                    The city is required\n                </div>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Adress</mat-label>\n                    <input type=\"text\" matInput placeholder=\"553 Hebron Rd\" formControlName=\"City\">\n                    <mat-icon matSuffix>location_city</mat-icon>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.City\" class=\"err-msg\">\n                    The adress name is required\n                </div>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Telephone</mat-label>\n                    <span matPrefix>+{{codePhone}} &nbsp;</span>\n                    <input type=\"number\" matInput placeholder=\"555-555-1234\" formControlName=\"Telephone\">\n                    <mat-icon matSuffix>local_phone</mat-icon>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.Telephone\" class=\"err-msg\">\n                    The telephone is required\n                </div>\n\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Email</mat-label>\n                    <input type=\"text\" matInput placeholder=\"example.j@example.com\" formControlName=\"Email\">\n                    <mat-icon matSuffix>alternate_email</mat-icon>\n                </mat-form-field>\n                <div *ngIf=\"formErrors.Email\" class=\"err-msg\">\n                    The email name is required\n                </div>\n\n                <div class=\"row justity-content-center\">\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Data verify!</button>\n                    </div>\n                </div>\n\n            </mat-card>\n        </div>\n        <div *ngIf=\"mode == 'preview'\">\n            <mat-card class=\"example-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"example-header-image\"></div>\n                    <mat-card-title>Preview contact data</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Name</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.name\">\n                            <mat-icon matSuffix>rowing</mat-icon>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Last Name</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.lastName\">\n                            <mat-icon matSuffix>rowing</mat-icon>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Country</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.country\">\n                            <mat-icon matSuffix>location_searching</mat-icon>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>City</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.city\">\n                            <mat-icon matSuffix>directions</mat-icon>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Adress</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.adress\">\n                            <mat-icon matSuffix>location_city</mat-icon>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Telephone</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.telephone\">\n                            <mat-icon matSuffix>local_phone</mat-icon>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Email</mat-label>\n                            <input type=\"text\" matInput disabled [value]=\"data.email\">\n                            <mat-icon matSuffix>alternate_email</mat-icon>\n                        </mat-form-field>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions>\n                    <div class=\"row justity-content-center\">\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Data send!</button>\n                            <button type=\"button\" class=\"btn btn-warning\" (click)=\"onBack()\">Back!</button>\n                        </div>\n                    </div>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card text-center\">\n    <div class=\"card-header\">\n        WELCOME TO: WALLET.\n    </div>\n    <div class=\"card-body\">\n        <img width=\"25%\" src=\"../../../assets/image/descarga.png\" alt=\"Logo\">\n        <h1 class=\"card-title\">Developed by:</h1>\n        <p class=\"card-text\">Juanmahecha9</p>\n        <a href=\"https://github.com/juanmahecha9\" target=\"_blank\" class=\"btn btn-primary\">Go my github...</a>\n    </div>\n    <div class=\"card-footer text-muted\">\n        1 day ago....\n    </div>\n</div>\n\n<div class=\"container text-center my-5\">\n    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Illo et nisi culpa quas, quia est qui dolores amet ipsa laborum neque repudiandae vel enim, eos nesciunt voluptatum, exercitationem ducimus praesentium!\n    Cupiditate, quo omnis accusantium alias cum tenetur molestiae commodi, quibusdam expedita perspiciatis nostrum ipsa, iure atque dignissimos eius? Vero voluptates autem quae perferendis dicta ex molestias a velit, porro provident!\n    Repudiandae, provident ad esse odio pariatur fugiat odit earum, illum, debitis tempora veniam accusantium voluptatibus error eius similique! Cum, sed! Magni officia eos adipisci sapiente facere maiores enim, quos sint?\n    Quis maiores obcaecati eum numquam beatae id dolor possimus eaque voluptatem unde. Adipisci obcaecati est maxime nihil facilis. Consectetur incidunt officiis ipsum repellendus cumque non assumenda rem cum sapiente nulla.\n    Earum ab vel nostrum, tempora in eum nihil praesentium, iste rem, fuga repudiandae? Ab nihil explicabo assumenda nulla sunt illum expedita. Provident sapiente iste obcaecati eius id cum aliquid at?\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\"\nimport { AuthService } from \"../../services/auth.service\"\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user = { email: '', password: '' }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.authService.inicio(this.user)\n      .subscribe(\n        res => {\n          //console.log(res);\n          alert('inico de sesion')\n          localStorage.setItem('token', res.token);\n          this.router.navigate(['/wallet/'+res.id]);\n        },\n        err => {\n          alert('Inicio de sesion erroneo, vuelva a intentar')\n          console.log(err)\n\n        }\n\n      )\n  }\n\n}\n","<main>\n    <div class=\"tag-container\">\n        <div class=\"margent\">\n            <div class=\"contenderorForm\">\n                <form class=\"formulario\" (ngSubmit)=\"login()\">\n                    <h1>Login</h1>\n                    <div class=\"contenedor\">\n                        <div class=\"input-contenedor\">\n                            <mat-icon matSuffix>alternate_email</mat-icon>\n                            <input ngModel required type=\"text\" placeholder=\"E-mail\" name=\"email\" #nombre=\"ngModel\"\n                                [(ngModel)]=\"user.email\">\n                        </div>\n                        <div class=\"input-contenedor\">\n                            <mat-icon matSuffix>check_circle</mat-icon>\n                            <input type=\"password\" placeholder=\"Password\" name=\"password\" #nombre=\"ngModel\"\n                                [(ngModel)]=\"user.password\" ngModel required>\n                        </div>\n                        <input type=\"submit\" value=\"Login\" class=\"button\">\n                        <p>By registering, you agree to our Terms of Use, Privacy Policy and Data Protection.\n                        </p>\n                        <p>Don't have an account? <a class=\"link\" routerLink=\"/register\">Register</a></p>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataUser } from 'src/app/models/data.user';\nimport { DataService } from 'src/app/services/data.service';\n\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit {\n  current_date = new Date();\n  idPage: any;\n  dataUser: DataUser;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.idPage = this.route.snapshot.params['id'];\n\n    localStorage.setItem('id', this.idPage);\n\n    this.dataService.findById(this.idPage).subscribe(\n      res => {\n        this.dataUser = res;\n        console.log(this.dataUser)\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n  add() {\n    let x = \"add\"\n    this.router.navigate(['/wallet',this.idPage, x]);\n  }\n\n  remove(){\n    let x = \"remove\"\n    this.router.navigate(['/wallet',this.idPage, x]);\n  }\n\n\n}\n","<div class=\"form-wrapper\">\n    <p class=\"step\">Sing in: {{dataUser.lastSingIn}} </p>\n    <form class=\"step-1\">\n        <div class=\"form-title\">\n            <div class=\"header\">\n                <img width=\"15%\" src=\"../../../assets/image/pixlr-bg-result-coin.png\" alt=\"logo\" />\n                <h2>Welcome: {{dataUser.name}}</h2>\n            </div>\n            <h5>Your register email is: </h5>\n        </div>\n        <div class=\"control-group amount-fields\">\n            <div class=\"amount-field\">\n                <div class=\"btc-amount\">\n                    <form class=\"example-form\">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>Your balance.</mat-label>\n                            <span matPrefix> $ &nbsp;</span>\n                            <input type=\"tel\" disabled matInput [value]=\"dataUser.balance\">\n                            <mat-icon matSuffix>attach_money</mat-icon>\n                        </mat-form-field>\n                    </form>\n                </div>\n            </div>\n            <p class=\"available\">Available to send: <span>({{dataUser.balance}})</span></p>\n        </div>\n    </form>\n\n    <div class=\"actions\">\n        <button class=\"btn btn-info mx-1\" (click)=\"remove()\">Remove</button>\n        <button class=\"btn btn-warning mx-1\" (click)=\"add()\">Add</button>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  idNavigation: string;\n\n  public uid: any;\n  public linkForm: any;\n  displayNavbar: string;\n  constructor(public auth: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.idNavigation = \"/wallet/\" + localStorage.getItem('id');\n\n    this.displayNavbar = '1';\n\n    $('#toggle-btn').on('click', function (e) {\n      e.preventDefault();\n      if ($(window).outerWidth() > 1000) {\n        $('#toggle-btn').toggleClass('mobile-version-navbar-show');\n      } else {\n        $('nav.side-navbar').toggleClass('show-sm');\n        $('#toggle-btn').toggleClass('mobile-version-navbar-show');\n      }\n    });\n\n    this.uid = this.uuid();\n    this.linkForm = \"/form2data/\" + this.uid;\n  }\n\n  toggleNavbar() {\n    if (this.displayNavbar == '0') {\n      this.displayNavbar = '1';\n      //  alert(this.displayNavbar);\n    } if (this.displayNavbar == '1') {\n      //    alert(\"1 - Changing to 0\");\n      this.displayNavbar = '0';\n    } else {\n      this.displayNavbar = '1';\n    }\n  }\n\n  uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  cerrar() {\n    this.auth.cerrarS();\n    alert('Exit!...');\n  }\n}","<nav class=\"navbar sticky-top navbar-expand-lg bg-dark\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">Wallet</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <mat-icon style=\"color: aliceblue;\">menu</mat-icon>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mr-auto w-100 justify-content-end\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" routerLink=\"/home\">Home </a>\n                </li>\n                <a class=\"nav-link\" [routerLink]=\"linkForm\">Form.</a>\n                <ng-container *ngIf=\"!auth.loggedIn(); else cerrarSesion\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/login\">Login.</a>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/register\">Sing up.</a>\n                    </li>\n                </ng-container>\n                <ng-template #cerrarSesion>\n                    <li  class=\"nav-link\">\n                        <a class=\"nav-link\" [routerLink]=\"idNavigation\">Profile.</a>\n                    </li>\n                    <li class=\"nav-link\" (click)=\"cerrar()\">\n                        <a class=\"nav-link\" href=\"#\">Close.</a>\n                    </li>\n                </ng-template>\n            </ul>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router'\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  /* objeto para llenar  */\n  user = {\n    name: '',\n    email: '',\n    password: ''\n  };\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  /* captura de los datos */\n  /* uso del local storage para poder guardar el token que se adquirio */\n  registro() {\n   this.authService.registro(this.user).subscribe(\n     res =>{\n      // console.log(res)\n       alert('Registro realizado')\n       this.router.navigate(['/home'])\n     },\n     err =>{\n       alert('Registro rechazado')\n       console.log(err)\n     }\n\n   )\n  }\n\n}\n","<main>\n    <div class=\"tag-container\">\n        <div class=\"margent\">\n            <div class=\"contenedorForm\">\n                <form class=\"formulario\" (submit)=\"registro()\">\n                    <h1>Registro</h1>\n                    <div class=\"contenedor\">\n                        <div class=\"input-contenedor\">\n                            <mat-icon matSuffix>rowing</mat-icon>\n                            <input type=\"text\" placeholder=\"Name\" name=\"nombre\" id=\"nombre\" #nombre=\"ngModel\"\n                                [(ngModel)]=\"user.name\" autofocus ngModel required>\n                        </div>\n\n                        <div class=\"input-contenedor\">\n                            <mat-icon matSuffix>alternate_email</mat-icon>\n                            <input required type=\"text\" placeholder=\"E-Mail\" name=\"email\" id=\"email\" #nombre=\"ngModel\"\n                                [(ngModel)]=\"user.email\" ngModel required>\n                        </div>\n\n                        <div class=\"input-contenedor\">\n                            <mat-icon matSuffix>check_circle</mat-icon>\n                            <input required type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\"\n                                #nombre=\"ngModel\" [(ngModel)]=\"user.password\" ngModel required>\n                        </div>\n\n                        <input type=\"submit\" value=\"Registrate\" class=\"button\" id=\"btn\">\n                        <p>By registering, you agree to our Terms of Use, Privacy Policy and Data Protection.\n                            data protection.</p>\n                        <p>Already have an account? <a class=\"link\" routerLink=\"/login\">Login</a></p>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataUser } from 'src/app/models/data.user';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-wallet-add',\n  templateUrl: './wallet-add.component.html',\n  styleUrls: ['./wallet-add.component.scss'],\n  providers: [DataService]\n})\nexport class WalletAddComponent implements OnInit {\n\n  public DataForm: FormGroup;\n  public income: number = 0.00\n  public total: number;\n  public idPage: any;\n  public dataUser: DataUser;\n  constructor(private router: Router, private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.idPage = this.route.snapshot.params['id'];\n\n    this.dataService.findById(this.idPage).subscribe(\n      res => {\n        this.dataUser = res;\n        console.log(res)\n      },\n      err => {\n        console.log(err)\n      }\n    )\n    this.DataForm = new FormGroup({\n      ValueAdd: new FormControl(),\n    });\n    this.subscribirAEntrada(\"ValueAdd\", value => {\n      this.income = value\n      this.total = this.income + this.dataUser.balance;\n    })\n  }\n\n  subscribirAEntrada(entrada: string, fn: any) {\n    const obs = this.DataForm.get(entrada);\n    if (obs != null) {\n      obs.valueChanges.subscribe({\n        next: fn,\n      });\n    }\n  }\n\n  retunData(control: string) {\n    return this.DataForm.get(control).value;\n  }\n\n  add() {\n    let isTrue = confirm(\"Ar you sure?\");\n    this.dataUser.balance = this.total\n    if (isTrue) {\n      this.dataService.upgradeData(this.idPage, this.dataUser).subscribe();\n    } else {\n    }\n  }\n  back(){\n    this.router.navigate(['/wallet', this.idPage]);\n  }\n\n}","<div class=\"card\">\n    <div class=\"card-header text-center\">\n        <h1>It is time to enter a value!</h1>\n    </div>\n    <div class=\"card-body\">\n        <div id=\"register\">\n            <div id=\"ticket\">\n                <h1>Thank You!</h1>\n                <table>\n                    <tbody id=\"entries\">\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <th>Balance</th>\n                            <th id=\"total\">${{dataUser.balance}}</th>\n                        </tr>\n                        <tr>\n                            <th>income</th>\n                            <th id=\"total\">${{income}}</th>\n                        </tr>\n                        <tr>\n                            <th>Total</th>\n                            <th id=\"total\">${{total}}</th>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n            <form id=\"entry\" name=\"f\" [formGroup]=\"DataForm\" class=\"form\">\n                <input id=\"newEntry\" type=\"number\" autofocus placeholder=\"How Much?\" formControlName=\"ValueAdd\">\n            </form>\n            <div class=\"my-3 row justify-content-center\">\n                <button class=\"btn btn-success\" (click)=\"add()\">Add value...</button>\n            </div>\n            <div class=\"my-3 row justify-content-center\">\n                <button class=\"btn btn-info\" (click)=\"back()\">Back wallet page.</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataUser } from 'src/app/models/data.user';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-wallet-remove',\n  templateUrl: './wallet-remove.component.html',\n  styleUrls: ['./wallet-remove.component.scss']\n})\nexport class WalletRemoveComponent implements OnInit {\n  public DataForm: FormGroup;\n  public income: number = 0.00\n  public total: number;\n  public idPage: any;\n  public dataUser: DataUser;\n  constructor(private router: Router, private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.idPage = this.route.snapshot.params['id'];\n\n    this.dataService.findById(this.idPage).subscribe(\n      res => {\n        this.dataUser = res;\n        console.log(res)\n      },\n      err => {\n        console.log(err)\n      }\n    )\n    this.DataForm = new FormGroup({\n      ValueAdd: new FormControl(),\n    });\n    this.subscribirAEntrada(\"ValueAdd\", value => {\n      this.income = value\n      this.total = this.dataUser.balance - this.income;\n    })\n  }\n\n  subscribirAEntrada(entrada: string, fn: any) {\n    const obs = this.DataForm.get(entrada);\n    if (obs != null) {\n      obs.valueChanges.subscribe({\n        next: fn,\n      });\n    }\n  }\n\n  retunData(control: string) {\n    return this.DataForm.get(control).value;\n  }\n\n  add() {\n    let isTrue = confirm(\"Ar you sure?\");\n    this.dataUser.balance = this.total\n    if (isTrue) {\n      if (this.income > this.dataUser.balance) {\n        alert(\"Transaction not possible due to lack of funds...\")\n      } else {\n        this.dataService.upgradeData(this.idPage, this.dataUser).subscribe();\n      }\n    } else {\n      this.router.navigate(['/wallet', this.idPage]);\n    }\n  }\n  back() {\n    this.router.navigate(['/wallet', this.idPage]);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header text-center\">\n        <h1>It is time to remove money!</h1>\n    </div>\n    <div class=\"card-body\">\n        <div id=\"register\">\n            <div id=\"ticket\">\n                <h1>Thank You!</h1>\n                <table>\n                    <tbody id=\"entries\">\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <th>Balance</th>\n                            <th id=\"total\">${{dataUser.balance}}</th>\n                        </tr>\n                        <tr>\n                            <th>Remove</th>\n                            <th id=\"total\">${{income}}</th>\n                        </tr>\n                        <tr>\n                            <th>Total</th>\n                            <th id=\"total\">${{total}}</th>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n            <form id=\"entry\" name=\"f\" [formGroup]=\"DataForm\" class=\"form\">\n                <input id=\"newEntry\" type=\"number\" autofocus placeholder=\"How Much?\" formControlName=\"ValueAdd\">\n            </form>\n            <div class=\"my-3 row justify-content-center\">\n                <button class=\"btn btn-success\" (click)=\"add()\">Remove value...</button>\n            </div>\n            <div class=\"my-3 row justify-content-center\">\n                <button class=\"btn btn-info\" (click)=\"back()\">Back wallet page.</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.router.navigate(['/registro']);\n    return false;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceService {\n  \n  private URL = \"http://localhost:4000/\"\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  sendMail(Data){\n    return this.http.post<any>('envio', Data)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  private url = \"http://localhost:4000\"\n\n  constructor(private http: HttpClient, private router: Router) { }\n  /* Solicitus al servidor */\n  registro(user) {\n    return this.http.post<any>(this.url + '/new', user);\n    /* retornar al sercio de la url un usuario que se va a recibir */\n  }\n\n  inicio(user) {\n    return this.http.post<any>(this.url + '/login', user);\n  }\n\n  /* comprobar de manera simple si el local storage posee un dato llamado token para la navegacion en las rutas privadas */\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  cerrarS() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('id');\n    this.router.navigate(['/inicio-sesion']);\n    console.log('Cerrar Sesion');\n  }\n\n  private() {\n    return this.http.get<any>(this.url + '/private');\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { DataUser } from '../models/data.user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private url = \"http://localhost:4000\"\n  data: DataUser;\n  constructor(private http: HttpClient, private router: Router) { }\n\n  findById(id: any) {\n    return this.http.get<any>(this.url+'/findById/' + id);\n  }\n\n  upgradeData(Id, nuevosDatos1) {\n    let params = JSON.stringify(nuevosDatos1);\n    /* convertir datos en un json */\n    let options = {\n        headers: new HttpHeaders({ \n            'Content-type': 'application/json' }) \n        };\n    /* Se crea una contante la cual sirve para indicar que la informacion que se enviara es de tipo json */\n    return this.http.put(\n        this.url + '/actualizar/' + Id,\n        params, // se indica que son datos en forma de json\n        options // se indica que son datos en forma de json\n    ).pipe(res => res)\n    /* se trae el metodo put, se crea la ruta mas su id */\n};\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenService implements HttpInterceptor {\n  constructor(private auth: AuthService) {}\n\n  /* Añadir cabezaras en cada peticion */\n  intercept(req, next) {\n    const tokenR = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`,\n      },\n    });\n    return next.handle(tokenR);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}